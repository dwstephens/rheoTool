/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
    grad(p)         Gauss linear;
    grad(U)         Gauss linear;
    extSTGrad       Gauss linear;

}

divSchemes
{
    default                  none;
    div(Sum(tau))            Gauss linear; 
    div(grad(U))             Gauss linear;
    
    div(rhoPhi,U)            Gauss linearUpwind grad(U);
    
    div(phi,alpha)           Gauss vanLeer01;
    div(phirb,alpha)         Gauss linear;
    
    div(phi,theta.water)    GaussDefCmpw cubista;
    div(phi,theta.air)      GaussDefCmpw cubista;
    div(phi,tau.water)      GaussDefCmpw cubista;
    div(phi,tau.air)        GaussDefCmpw cubista;

    "div\(phi,(k|omega)\)"      Gauss upwind;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default                             none;
    laplacian(eta,U)                    Gauss linear corrected;
    laplacian(p_rgh|(ap-H1))            Gauss linear corrected;
    laplacian(rAUf,pcorr)               Gauss linear corrected;
    laplacian(rAUf,p_rgh)               Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

wallDist
{
    method meshWave;
}

fluxRequired
{
    default         no;
    p_rgh;
    pcorr;
    alpha1;
}


// ************************************************************************* //
